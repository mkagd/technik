// update-compensation-to-commission.js
// Aktualizacja struktury wynagrodzeÅ„ - prowizja od wizyt zamiast stawki godzinowej

const fs = require('fs');
const path = require('path');

const employeesPath = path.join(__dirname, 'data', 'employees.json');

// Wczytaj pracownikÃ³w
const employees = JSON.parse(fs.readFileSync(employeesPath, 'utf8'));

console.log(`ðŸ“‹ Znaleziono ${employees.length} pracownikÃ³w\n`);

// Zaktualizuj strukturÄ™ wynagrodzeÅ„
employees.forEach((emp, index) => {
  if (emp.compensation) {
    console.log(`ðŸ”„ AktualizujÄ™: ${emp.name}`);
    
    // Nowa struktura - prowizja od wizyt
    emp.compensation = {
      // Model prowizyjny - zarabianie za wizyty
      commissionModel: {
        enabled: true,
        type: 'per-visit', // per-visit (za wizytÄ™) lub percentage (% od wartoÅ›ci)
        
        // Prowizja za typ wizyty
        visitRates: {
          diagnosis: 50,      // Diagnoza - 50 PLN
          repair: 100,        // Naprawa - 100 PLN
          installation: 80,   // Instalacja - 80 PLN
          control: 40         // Kontrola - 40 PLN
        },
        
        // Procent od wartoÅ›ci zlecenia (jeÅ›li type = 'percentage')
        percentageRate: 20,   // 20% od wartoÅ›ci zlecenia
        
        // Premia za trudnoÅ›Ä‡
        difficultyBonus: {
          standard: 0,        // Standardowa wizyta - 0 PLN
          complex: 50,        // Skomplikowana - +50 PLN
          veryComplex: 100    // Bardzo skomplikowana - +100 PLN
        },
        
        // Premia za odlegÅ‚oÅ›Ä‡ (za kaÅ¼de 10km powyÅ¼ej 20km)
        distanceBonus: {
          threshold: 20,      // PowyÅ¼ej 20km
          perExtraKm: 2       // 2 PLN za kaÅ¼dy dodatkowy km
        }
      },
      
      // Metody pÅ‚atnoÅ›ci (jakie przyjmuje od klienta)
      paymentMethods: {
        cash: true,           // GotÃ³wka
        card: true,           // Terminal kart
        transfer: true,       // Przelew (klient wpÅ‚aci pÃ³Åºniej)
        blik: true            // BLIK
      },
      
      // Premie dodatkowe
      bonuses: {
        qualityScore: {
          enabled: true,
          minRating: 4.5,     // Minimalny rating do premii
          amount: 500         // 500 PLN miesiÄ™cznie za rating >4.5
        },
        punctuality: {
          enabled: true,
          threshold: 90,      // 90% wizyt na czas
          amount: 300         // 300 PLN miesiÄ™cznie
        },
        monthlyTarget: {
          enabled: true,
          visitsRequired: 60, // 60 wizyt miesiÄ™cznie
          amount: 1000        // 1000 PLN premii za osiÄ…gniÄ™cie
        }
      },
      
      // Statystyki zarobkÃ³w
      earnings: {
        total: emp.compensation.earnings?.total || 0,
        thisMonth: emp.compensation.earnings?.thisMonth || 0,
        lastMonth: emp.compensation.earnings?.lastMonth || 0,
        unpaid: emp.compensation.earnings?.unpaid || 0,
        
        // Nowe statystyki
        thisMonthVisits: 0,
        thisMonthDistance: 0,
        avgEarningPerVisit: 0
      },
      
      // Historia wypÅ‚at
      paymentHistory: emp.compensation.paymentHistory || [],
      
      // Ustawienia
      settings: {
        autoCalculate: true,        // Automatyczne liczenie z wizyt
        taxRate: 0,                 // Podatek (%)
        socialContributions: 0,     // ZUS (%)
        accountNumber: '',          // Numer konta do przelewÃ³w
        preferredPaymentDay: 5      // DzieÅ„ wypÅ‚aty (5-ty dzieÅ„ miesiÄ…ca)
      }
    };
    
    console.log(`   âœ… Zaktualizowano model prowizyjny`);
    console.log(`   ðŸ’° Diagnoza: ${emp.compensation.commissionModel.visitRates.diagnosis} PLN`);
    console.log(`   ðŸ”§ Naprawa: ${emp.compensation.commissionModel.visitRates.repair} PLN\n`);
  }
});

// Zapisz zaktualizowany plik
fs.writeFileSync(employeesPath, JSON.stringify(employees, null, 2), 'utf8');

console.log('âœ… Struktura wynagrodzeÅ„ zostaÅ‚a zaktualizowana!');
console.log('ðŸ“Š Model prowizyjny (za wizytÄ™) jest teraz aktywny\n');
console.log('PrzykÅ‚adowe zarobki:');
console.log('  - 1 diagnoza = 50 PLN');
console.log('  - 1 naprawa = 100 PLN');
console.log('  - 1 naprawa skomplikowana = 150 PLN');
console.log('  - 60 wizyt/miesiÄ…c = bonus 1000 PLN');
