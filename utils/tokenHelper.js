// utils/tokenHelper.js
// üîë Universal token helper - naprawia wszystkie problemy z autoryzacjƒÖ

/**
 * Pobiera token z DOWOLNEGO systemu logowania
 * Priorytet: employeeToken > technicianToken > serwisToken
 */
export const getUniversalToken = () => {
  // Sprawd≈∫ wszystkie mo≈ºliwe miejsca
  const tokens = [
    localStorage.getItem('employeeToken'),
    localStorage.getItem('technicianToken'),
    localStorage.getItem('serwisToken'),
    localStorage.getItem('token'),
  ];

  // Zwr√≥ƒá pierwszy niepusty
  const token = tokens.find(t => t && t.length > 10);
  
  if (!token) {
    console.error('‚ùå NO TOKEN FOUND! Sprawdzono:', {
      employeeToken: !!localStorage.getItem('employeeToken'),
      technicianToken: !!localStorage.getItem('technicianToken'),
      serwisToken: !!localStorage.getItem('serwisToken'),
    });
  } else {
    console.log('‚úÖ Token found:', token.substring(0, 20) + '...');
  }

  return token;
};

/**
 * Synchronizuje token miƒôdzy wszystkimi kluczami
 */
export const syncAllTokens = () => {
  const token = getUniversalToken();
  
  if (token) {
    // Ustaw we wszystkich miejscach
    localStorage.setItem('employeeToken', token);
    localStorage.setItem('technicianToken', token);
    console.log('‚úÖ Token synchronized across all keys');
    return true;
  }
  
  console.error('‚ùå No token to sync');
  return false;
};

/**
 * Naprawia token - uruchom to gdy masz 401
 */
export const fixToken = () => {
  console.log('üîß Starting token fix...');
  
  // Krok 1: Sprawd≈∫ co mamy
  const employeeToken = localStorage.getItem('employeeToken');
  const technicianToken = localStorage.getItem('technicianToken');
  
  console.log('üìã Current state:', {
    employeeToken: employeeToken ? '‚úÖ EXISTS' : '‚ùå NULL',
    technicianToken: technicianToken ? '‚úÖ EXISTS' : '‚ùå NULL',
  });

  // Krok 2: Synchronizuj je≈õli kt√≥ry≈õ istnieje
  if (employeeToken && !technicianToken) {
    localStorage.setItem('technicianToken', employeeToken);
    console.log('‚úÖ Copied employeeToken ‚Üí technicianToken');
    return true;
  }
  
  if (technicianToken && !employeeToken) {
    localStorage.setItem('employeeToken', technicianToken);
    console.log('‚úÖ Copied technicianToken ‚Üí employeeToken');
    return true;
  }

  if (employeeToken && technicianToken) {
    console.log('‚úÖ Both tokens exist');
    return true;
  }

  // Krok 3: Brak token√≥w
  console.error('‚ùå NO TOKENS FOUND - You need to login!');
  console.log('üîó Go to: /pracownik-logowanie');
  return false;
};

/**
 * Debug info - wywo≈Çaj aby zobaczyƒá pe≈Çny stan
 */
export const debugTokens = () => {
  console.log('üîç TOKEN DEBUG INFO:');
  console.log('==================');
  
  const keys = [
    'employeeToken',
    'technicianToken', 
    'serwisToken',
    'token',
    'employeeSession',
    'technicianEmployee',
  ];

  keys.forEach(key => {
    const value = localStorage.getItem(key);
    if (value) {
      try {
        const parsed = JSON.parse(value);
        console.log(`${key}:`, parsed);
      } catch {
        console.log(`${key}:`, value.substring(0, 30) + '...');
      }
    } else {
      console.log(`${key}:`, '‚ùå NULL');
    }
  });
  
  console.log('==================');
};
